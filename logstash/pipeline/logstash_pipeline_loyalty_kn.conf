input {
  jdbc {
    jdbc_driver_library => "/usr/share/logstash/jdbc_drivers/postgresql.jar/postgresql-42.6.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://10.10.10.154:5432/sci_erp"
    jdbc_user => "erp_db_user"
    jdbc_password => "Erp@scI2021"
    schedule => "* * * * *"  # chạy mỗi phút, bạn chỉnh theo ý muốn
    statement => "SELECT lk.id, lk.name, rp.phone, lk.total, 1000 as point_unit, lkr.id as rank_id, lkr.name as rank_name, lk.write_date FROM loyalty_kangnam lk LEFT JOIN res_partner rp ON rp.id = lk.partner_id LEFT JOIN loyalty_kangnam_rank lkr ON lkr.id = lk.rank_id WHERE lk.write_date > :sql_last_value"
    use_column_value => true
    tracking_column => "write_date"
    tracking_column_type => "timestamp"
    last_run_metadata_path => "/usr/share/logstash/metadata/.logstash_pipeline_loyalty_kn_last_run"
    type => "loyalty"
  }

  jdbc {
    jdbc_driver_library => "/usr/share/logstash/jdbc_drivers/postgresql.jar/postgresql-42.6.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://10.10.10.154:5432/sci_erp"
    jdbc_user => "erp_db_user"
    jdbc_password => "Erp@scI2021"
    schedule => "* * * * *"
    statement => "SELECT lkd.id, lkd.name, lk.id AS loyalty_id, lkd.discount_total, lkd.type_gift, lkd.type_use, lkd.type, lkd.date_end::date, lkd.write_date FROM loyalty_kangnam_discount lkd LEFT JOIN loyalty_kangnam lk ON lk.id = lkd.loyalty;"
    type => "discount"
  }

  jdbc {
    jdbc_driver_library => "/usr/share/logstash/jdbc_drivers/postgresql.jar/postgresql-42.6.0.jar"
    jdbc_driver_class => "org.postgresql.Driver"
    jdbc_connection_string => "jdbc:postgresql://10.10.10.154:5432/sci_erp"
    jdbc_user => "erp_db_user"
    jdbc_password => "Erp@scI2021"
    statement => "SELECT lkh.id, lkr.name, lk.id AS loyalty_id, lkh.date_used::date, lkh.write_date FROM loyalty_kangnam_history lkh LEFT JOIN loyalty_kangnam_reward lkr ON lkr.id = lkh.reward_id LEFT JOIN loyalty_kangnam lk ON lk.id = lkh.loyalty;"
    schedule => "* * * * *"
    type => "history"
  }
}

filter {
  aggregate {
    task_id => "%{id}"
    code => "
      map['id'] = event.get('id')
      map['name'] = event.get('name')
      map['phone'] = event.get('phone')
      map['total'] = event.get('total')
      map['point_unit'] = event.get('point_unit')
      map['point'] = event.get('total').to_f / event.get('point_unit').to_f
      map['rank'] = {
        'id' => event.get('rank_id'),
        'name' => event.get('rank_name')
      }
      map['history'] ||= []
      map['discount'] ||= []
    "
    map_action => "create"
    timeout => 120
    if => "([type] == 'loyalty')"
  }

  if [type] == "history" {
    aggregate {
      task_id => "%{loyalty_id}"
      code => "
        map['history'] ||= []
        map['history'] << {
          'id' => event.get('id'),
          'name' => event.get('name'),
          'date' => event.get('date_used')
        }
      "
      map_action => "update"
      timeout => 120
    }
  }

  if [type] == "discount" {
    aggregate {
      task_id => "%{loyalty_id}"
      code => "
        map['discount'] ||= []
        map['discount'] << {
          'id' => event.get('id'),
          'name' => event.get('name'),
          'discount_total' => event.get('discount_total'),
          'type_gift' => event.get('type_gift'),
          'type_use' => event.get('type_use'),
          'type' => event.get('type'),
          'date_end' => event.get('date_end')
        }
      "
      map_action => "update"
      timeout => 120
    }
  }

  # Chỉ xuất event tổng hợp
  if [type] != "loyalty" {
    drop { }
  }
}

output {
  elasticsearch {
    hosts => "elasticsearch:9200"
    user => "logstash_internal"
    password => "${LOGSTASH_INTERNAL_PASSWORD}"
    index => "loyalty_kangnam"
    document_id => "%{id}"
    action => "update"
    doc_as_upsert => true
  }

  stdout { codec => rubydebug }
}
